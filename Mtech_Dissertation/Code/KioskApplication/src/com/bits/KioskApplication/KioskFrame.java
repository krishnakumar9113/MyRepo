/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bits.KioskApplication;

import java.awt.Component;
import java.awt.Container;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.DocPrintJob;
import javax.print.PrintService;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author Krishna
 */
public class KioskFrame extends javax.swing.JFrame {

    /**
     * Creates new form KioskFrame
     */
    public KioskFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_print = new javax.swing.JButton();
        textField_SecretCode = new javax.swing.JTextField();
        btn_submit = new javax.swing.JButton();
        lbl_SecretCode = new javax.swing.JLabel();
        pnlBillDetails = new com.bits.KioskApplication.BillDetails();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("KIOSK APPLICATION");

        btn_print.setText("PRINT");
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });

        btn_submit.setText("Submit");
        btn_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_submitActionPerformed(evt);
            }
        });

        lbl_SecretCode.setText("Enter Secret Code");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lbl_SecretCode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textField_SecretCode, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_submit))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlBillDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField_SecretCode, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_SecretCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBillDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_print, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_submitActionPerformed
        //Get details
        try {
            if (textField_SecretCode.getText().equals("") || textField_SecretCode.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Enter secret code to retrieve bill details", "Warning",
                        JOptionPane.WARNING_MESSAGE);
            } else {
                new OrderDetails(1).execute();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Request not processed", "Error",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btn_submitActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        // TODO add your handling code here:

        try {
            if (textField_SecretCode.getText().equals("") || textField_SecretCode.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Enter secret code to print bill details ", "Warning",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
            URL obj = new URL("http://" + BillDetails.IP + "/webapi/order/statusupdate/" + textField_SecretCode.getText().toString());
            HttpURLConnection con = (HttpURLConnection) obj.openConnection();
            con.setRequestMethod("GET");
            //con.setRequestProperty("User-Agent", USER_AGENT);
            int responseCode = con.getResponseCode();
            System.out.println("GET Response Code :: " + responseCode);
            if (responseCode == HttpURLConnection.HTTP_OK) { // success
                BufferedReader in = new BufferedReader(new InputStreamReader(
                        con.getInputStream()));
                String inputLine;
                StringBuffer response = new StringBuffer();

                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                if (response.toString().equals("ok")) {
                    String printerNameDesired = BillDetails.printer;
                    PrintService[] service = PrinterJob.lookupPrintServices(); // list of printers

                    int count = service.length;
                    DocPrintJob docPrintJob = null;
                    for (int i = 0; i < count; i++) {
                        if (service[i].getName().contains(printerNameDesired)) {
                            docPrintJob = service[i].createPrintJob();
                            i = count;
                        }
                    }
                    PrinterJob pjob = PrinterJob.getPrinterJob();

                    pjob.setPrintService(docPrintJob.getPrintService());

                    PageFormat pf = pjob.defaultPage();

                    pjob.setPrintable(pnlBillDetails, pf);

                   //   if (pjob.printDialog()) {
                    pjob.print();
                    JOptionPane.showMessageDialog(this, "Printed Successfully", "Print",
                            JOptionPane.PLAIN_MESSAGE);
                    new OrderDetails(2).execute();
                } else {
                    JOptionPane.showMessageDialog(this, response.toString(), "Error",
                            JOptionPane.PLAIN_MESSAGE);
                    URL obj2 = new URL("http://" + BillDetails.IP + "/webapi/order/statusupdatepaid/" + textField_SecretCode.getText().toString());
                    HttpURLConnection con2 = (HttpURLConnection) obj2.openConnection();
                    con2.setRequestMethod("GET");
                    //con.setRequestProperty("User-Agent", USER_AGENT);
                    int responseCode2 = con2.getResponseCode();

                    new OrderDetails(2).execute();

                }

            } else {
                System.out.println("GET request not worked");
            }
                    // TODO add your handling code here:
            //     String printerNameDesired = "\\\\CTSINSRIVMPS.cts.com\\SRISZB16LPR1";

                  // String printerNameDesired="doPDF";
        } catch (PrinterException ex) {
            try {
                JOptionPane.showMessageDialog(this, "Print failed", "Error",
                        JOptionPane.WARNING_MESSAGE);

                URL obj2 = new URL("http://" + BillDetails.IP + "/webapi/order/statusupdatepaid/" + textField_SecretCode.getText().toString());
                HttpURLConnection con2 = (HttpURLConnection) obj2.openConnection();
                con2.setRequestMethod("GET");
                //con.setRequestProperty("User-Agent", USER_AGENT);
                int responseCode2 = con2.getResponseCode();

                new OrderDetails(2).execute();

                Logger.getLogger(KioskFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex1) {
                Logger.getLogger(KioskFrame.class.getName()).log(Level.SEVERE, null, ex1);
            } catch (IOException ex1) {
                Logger.getLogger(KioskFrame.class.getName()).log(Level.SEVERE, null, ex1);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Print failed", "Error",
                    JOptionPane.WARNING_MESSAGE);
            try {
                JOptionPane.showMessageDialog(this, "Print failed", "Error",
                        JOptionPane.WARNING_MESSAGE);

                URL obj2 = new URL("http://" + BillDetails.IP + "/webapi/order/statusupdatepaid/" + textField_SecretCode.getText().toString());
                HttpURLConnection con2 = (HttpURLConnection) obj2.openConnection();
                con2.setRequestMethod("GET");
                //con.setRequestProperty("User-Agent", USER_AGENT);
                int responseCode2 = con2.getResponseCode();

                new OrderDetails(2).execute();

                Logger.getLogger(KioskFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex1) {
                Logger.getLogger(KioskFrame.class.getName()).log(Level.SEVERE, null, ex1);
            } catch (IOException ex1) {
                Logger.getLogger(KioskFrame.class.getName()).log(Level.SEVERE, null, ex1);
            }
            Logger.getLogger(KioskFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //      }
    }//GEN-LAST:event_btn_printActionPerformed
    class OrderDetails extends SwingWorker<String, Object> {

        int Type;

        OrderDetails(int type) {
            this.Type = type;
        }

        public void enableComponents(Container container, boolean enable) {
            Component[] components = container.getComponents();
            for (Component component : components) {
                component.setEnabled(enable);
                if (component instanceof Container) {
                    enableComponents((Container) component, enable);
                }
            }
        }

        @Override
        public String doInBackground() throws Exception {

            enableComponents(pnlBillDetails, false);
            if (Type == 2) {
                textField_SecretCode.setText("");
            }
            pnlBillDetails.sendGET(textField_SecretCode.getText(), Type);

            return "";
        }

        @Override
        protected void done() {
            try {
                enableComponents(pnlBillDetails, true);
                //          label.setText(get());
            } catch (Exception ignore) {
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KioskFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KioskFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KioskFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KioskFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KioskFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_submit;
    private javax.swing.JLabel lbl_SecretCode;
    private com.bits.KioskApplication.BillDetails pnlBillDetails;
    private javax.swing.JTextField textField_SecretCode;
    // End of variables declaration//GEN-END:variables
}
